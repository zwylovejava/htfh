package com.boot.controller;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.boot.pojo.Address;
import com.boot.pojo.Order;
import com.boot.pojo.OrderItem;
import com.boot.pojo.Product;
import com.boot.pojo.User;
import com.boot.service.AddressService;
import com.boot.service.OrderService;

@Controller
public class OrderController {
	@Autowired
	private OrderService orderService;
	@Autowired
	private AddressService addressService;
	
	@RequestMapping("/cart/orderadd")
	public String orderAdd(Address address,HttpSession  session) {
		//========================test_code===============
		User user = new User();
		user.setUserId("testbyOrderController");
		user.setUserId("testUserIdbyOrderController");
		session.setAttribute("sessionUser", user);
		//========================test_code===============
		Object cartObj = session.getAttribute("cart");
		if(cartObj == null) {
			return "redirect:/index";
		}
		Object userObj = session.getAttribute("sessionUser");
		if(userObj == null) {
			return "login";
		}
		address.setReceiveId(UUID.randomUUID().toString());
		address.setUserId(user.getUserId());
		
		addressService.addAddress(address); //向数据库插入地址数据
		
		Map<Product, Integer> cart =(Map<Product, Integer>)cartObj;
		Order order = new Order();
		order.setOrderId(UUID.randomUUID().toString());
		order.setOrderTime(new Date());
		order.setState(0);
		order.setReceiveId(address.getReceiveId());
		order.setUserId(((User)userObj).getUserId());
		double money = 0;
		List<OrderItem> orderItemList = new ArrayList<>();
		for(Map.Entry<Product,Integer> entry:cart.entrySet()) {
			OrderItem oi = new OrderItem();
			oi.setOrderId(order.getOrderId());
			oi.setProductId(entry.getKey().getProductId());
			oi.setBuyNum(entry.getValue());
			orderItemList.add(oi);
			money+=entry.getKey().getPrice()*entry.getValue();
		}
		order.setMoney(money);
		order.setConfirm(0);
		
		//向数据库插入订单条目以及订单列表
		
		orderService.addOrder(order,orderItemList);
		
		
		return "order/orderadd";
	}

}
